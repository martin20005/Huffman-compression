<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="gtest__lite_8h" local="yes">gtest_lite.h</includes>
    <includes refid="memtrace_8h" local="yes">memtrace.h</includes>
    <includes refid="bitbuffer_8h" local="yes">bitbuffer.h</includes>
    <includes refid="letter_8h" local="yes">letter.h</includes>
    <includes refid="huffman_8h" local="yes">huffman.h</includes>
    <incdepgraph>
      <node id="82">
        <label>limits</label>
      </node>
      <node id="88">
        <label>list.h</label>
        <link refid="list_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>stdlib.h</label>
      </node>
      <node id="80">
        <label>cmath</label>
      </node>
      <node id="79">
        <label>cassert</label>
      </node>
      <node id="83">
        <label>string</label>
      </node>
      <node id="94">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>gtest_lite.h</label>
        <link refid="gtest__lite_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>fstream</label>
      </node>
      <node id="85">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>letter.h</label>
        <link refid="letter_8h"/>
      </node>
      <node id="91">
        <label>huffman.h</label>
        <link refid="huffman_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>utility</label>
      </node>
      <node id="92">
        <label>cstdlib</label>
      </node>
      <node id="77">
        <label>iostream</label>
      </node>
      <node id="89">
        <label>cstddef</label>
      </node>
      <node id="87">
        <label>bitbuffer.h</label>
        <link refid="bitbuffer_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>cstring</label>
      </node>
      <node id="76">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1aa90f3e89fc3fe477370afb9f81975081" prot="public" static="no">
        <name>MEMTRACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="5" column="10" bodyfile="main.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="14" column="1" bodyfile="main.cpp" bodystart="14" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#define<sp/>KARAKTERTESZT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KARAKTERTESZT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="main_8cpp_1aa90f3e89fc3fe477370afb9f81975081" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gtest__lite_8h" kindref="compound">gtest_lite.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memtrace_8h" kindref="compound">memtrace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegtest__lite" kindref="compound">gtest_lite</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitbuffer_8h" kindref="compound">bitbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="letter_8h" kindref="compound">letter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="huffman_8h" kindref="compound">huffman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------<sp/><sp/>Buffer<sp/><sp/>------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(Buffer,<sp/>Constructor)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>bb0(8);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb0.<ref refid="class_bit_buffer_1a36ec4987fe9b4927bba7b63fab2971f8" kindref="member">push</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb0.<ref refid="class_bit_buffer_1a1075aee0daeee83dbe4908c325b6969f" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>bb1<sp/>=<sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*8,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>bb1.<ref refid="class_bit_buffer_1ad161009c775d28495a6563202e4662c4" kindref="member">sizeOfChunk</ref>());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>bb2(bb0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(bb0.<ref refid="class_bit_buffer_1a8f569dfa9535ac107c84846f22a45221" kindref="member">pop</ref>(),<sp/>bb2.pop());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(Buffer,<sp/>Push)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>test1(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test1.<ref refid="class_bit_buffer_1a36ec4987fe9b4927bba7b63fab2971f8" kindref="member">push</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&gt;&gt;<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test1.<ref refid="class_bit_buffer_1a36ec4987fe9b4927bba7b63fab2971f8" kindref="member">push</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test1.<ref refid="class_bit_buffer_1a1075aee0daeee83dbe4908c325b6969f" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>test1.<ref refid="class_bit_buffer_1a2ef8ca85ce6f7a9d0523faf2e1f5873d" kindref="member">data_</ref>()[0]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(Buffer,<sp/>Pop)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>test2<sp/>=<sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test2.<ref refid="class_bit_buffer_1a36ec4987fe9b4927bba7b63fab2971f8" kindref="member">push</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>8);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test2.<ref refid="class_bit_buffer_1a1075aee0daeee83dbe4908c325b6969f" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(1,<sp/>test2.<ref refid="class_bit_buffer_1a6986fb3db8ebb8c0c1c88b3a9aecc295" kindref="member">countOfFullChunks</ref>());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>test2.<ref refid="class_bit_buffer_1a8f569dfa9535ac107c84846f22a45221" kindref="member">pop</ref>());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(0,<sp/>test2.<ref refid="class_bit_buffer_1a6986fb3db8ebb8c0c1c88b3a9aecc295" kindref="member">countOfFullChunks</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(Buffer,<sp/>Bit)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref><sp/>test3<sp/>=<sp/><ref refid="class_bit_buffer" kindref="compound">BitBuffer</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test3.<ref refid="class_bit_buffer_1a36ec4987fe9b4927bba7b63fab2971f8" kindref="member">push</ref>(170,<sp/>8);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test3.<ref refid="class_bit_buffer_1a1075aee0daeee83dbe4908c325b6969f" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_of_curr_chunk_b_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>test3.<ref refid="class_bit_buffer_1ad161009c775d28495a6563202e4662c4" kindref="member">sizeOfChunk</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len_of_curr_chunk_b_<sp/>+=<sp/>test3.<ref refid="class_bit_buffer_1a50d13861a778aff828e42e4f32371726" kindref="member">bit</ref>()<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(4,<sp/>len_of_curr_chunk_b_);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------<sp/><sp/>Letter<sp/><sp/>------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(<ref refid="class_letter" kindref="compound">Letter</ref>,<sp/>Constructor)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_letter" kindref="compound">Letter</ref><sp/>l0<sp/>=<sp/><ref refid="class_letter" kindref="compound">Letter</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>0,<sp/>l0.<ref refid="class_letter_1a9ae0471d69dddf53a0a64219233d0c4a" kindref="member">original</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>0,<sp/>l0.<ref refid="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" kindref="member">huffman</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>0,<sp/>l0.<ref refid="class_letter_1a06c63721ba0b1c40ac7591835f2e6e43" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_letter" kindref="compound">Letter</ref><sp/>l1<sp/>=<sp/><ref refid="class_letter" kindref="compound">Letter</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>l1.original());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72" kindref="member">TEST</ref>(<ref refid="class_letter" kindref="compound">Letter</ref>,<sp/>Functions)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_letter" kindref="compound">Letter</ref><sp/>l0(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l0.<ref refid="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" kindref="member">huffman</ref>(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_letter" kindref="compound">Letter</ref><sp/>l1<sp/>=<sp/>l0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(l0.<ref refid="class_letter_1a9ae0471d69dddf53a0a64219233d0c4a" kindref="member">original</ref>(),<sp/>l1.<ref refid="class_letter_1a9ae0471d69dddf53a0a64219233d0c4a" kindref="member">original</ref>());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1aff8385840165a184edc29446aa51936f" kindref="member">EXPECT_EQ</ref>(l0.<ref refid="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" kindref="member">huffman</ref>(),<sp/>l1.<ref refid="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" kindref="member">huffman</ref>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest__lite_8h_1ab400890edc9f419e40c28a224e8ed79f" kindref="member">EXPECT_TRUE</ref>(l0<sp/>==<sp/>l1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------<sp/><sp/>Huffman<sp/><sp/>------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>HOME<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">)<sp/>?<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source<sp/>=<sp/>HOME<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Prog/C++/Prog2/hf/huffman_1.2/Test.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destiny<sp/>=<sp/>HOME<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Prog/C++/Prog2/hf/huffman_1.2/Test.huffman_code_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_huffman" kindref="compound">Huffman</ref><sp/>h2<sp/>=<sp/><ref refid="class_huffman" kindref="compound">Huffman</ref>(source,<sp/>destiny);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>h2.<ref refid="class_huffman_1a29b0ed4581235dae876fca58dd9bf06f" kindref="member">compress</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>extdest<sp/>=<sp/>HOME<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Prog/C++/Prog2/hf/huffman_1.2/Test_ext.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_huffman" kindref="compound">Huffman</ref><sp/>h3<sp/>=<sp/><ref refid="class_huffman" kindref="compound">Huffman</ref>(destiny,<sp/>extdest);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>h3.<ref refid="class_huffman_1a7c0595055bea8a499d7750cbbd86e12d" kindref="member">extract</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>setlocale(LC_ALL,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ez<sp/>beállítja<sp/>az<sp/>op.rendszer<sp/>által<sp/>használt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nyelvi<sp/>környezetet,<sp/>amit<sp/>feltételezünk,<sp/>hogy<sp/>magyar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>alatt<sp/>a<sp/>konzol<sp/>ablak<sp/>betűkészletét<sp/>állítsa<sp/>&quot;Lucida<sp/>Console&quot;-ra!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;árviztűrő<sp/>tükörfúrógép&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>szöveg1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TÜSKÉSHÁTÚ<sp/>KÍGYÓBŰVÖLŐ&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>szöveg2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>inf(</highlight><highlight class="stringliteral">&quot;lang.cpp&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beolvassa<sp/>saját<sp/>magát</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inf,<sp/>s))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_letter" kind="class" language="C++" prot="public">
    <compoundname>Letter</compoundname>
    <includes refid="letter_8h" local="no">letter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_letter_1a09e85e61f84fd8254a6aa930a72e8bdc" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Letter::original_</definition>
        <argsstring></argsstring>
        <name>original_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="5" column="1" bodyfile="letter.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_letter_1a0fbbf244b4667f422ce99823d5dd3a2e" prot="private" static="no" mutable="no">
        <type>long long int</type>
        <definition>long long int Letter::huffman_code_</definition>
        <argsstring></argsstring>
        <name>huffman_code_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="6" column="1" bodyfile="letter.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_letter_1a576189a6bc0a2dbecb998d73f7b9d2b5" prot="private" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char Letter::len_of_code_b_</definition>
        <argsstring></argsstring>
        <name>len_of_code_b_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="7" column="1" bodyfile="letter.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_letter_1aa33f1a7d59948007cabb7cb3060fbbdd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Letter::Letter</definition>
        <argsstring>(char c)</argsstring>
        <name>Letter</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="9" column="1" bodyfile="letter.h" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1aad5ec69b0312ac41d818337c5ff94e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Letter::Letter</definition>
        <argsstring>(const Letter &amp;l)</argsstring>
        <name>Letter</name>
        <param>
          <type>const <ref refid="class_letter" kindref="compound">Letter</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="10" column="1" bodyfile="letter.h" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1ac390dd9bfbdd7a0965cd74b3eccee010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Letter::Letter</definition>
        <argsstring>()</argsstring>
        <name>Letter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="11" column="1" bodyfile="letter.h" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1a9ae0471d69dddf53a0a64219233d0c4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char Letter::original</definition>
        <argsstring>() const</argsstring>
        <name>original</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="13" column="1" bodyfile="letter.h" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1af6158c9bc58d3f4b77ee627807b87133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Letter::original</definition>
        <argsstring>(char ch)</argsstring>
        <name>original</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="14" column="1" bodyfile="letter.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long long int</type>
        <definition>long long int Letter::huffman</definition>
        <argsstring>() const</argsstring>
        <name>huffman</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="15" column="1" bodyfile="letter.h" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1ac345d7df6c98a9aea64f77d55267f820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Letter::huffman</definition>
        <argsstring>(long long int h, unsigned char l)</argsstring>
        <name>huffman</name>
        <param>
          <type>long long int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="16" column="1" bodyfile="letter.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1a06c63721ba0b1c40ac7591835f2e6e43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char Letter::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="17" column="1" bodyfile="letter.h" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1a5bd34c7d6753f3a950cb3a3358945c1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_letter" kindref="compound">Letter</ref> &amp;</type>
        <definition>Letter&amp; Letter::operator=</definition>
        <argsstring>(const Letter &amp;l)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_letter" kindref="compound">Letter</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="19" column="1" bodyfile="letter.h" bodystart="19" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_letter_1acadabf182742d730bcc61f052b29aad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Letter::operator==</definition>
        <argsstring>(const Letter &amp;l)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_letter" kindref="compound">Letter</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="letter.h" line="26" column="1" bodyfile="letter.h" bodystart="26" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="letter.h" line="4" column="1" bodyfile="letter.h" bodystart="4" bodyend="29"/>
    <listofallmembers>
      <member refid="class_letter_1a0fbbf244b4667f422ce99823d5dd3a2e" prot="private" virt="non-virtual"><scope>Letter</scope><name>huffman_code_</name></member>
      <member refid="class_letter_1af52f553dafb323384339dcfaa1a7eaa6" prot="public" virt="non-virtual"><scope>Letter</scope><name>huffman</name></member>
      <member refid="class_letter_1ac345d7df6c98a9aea64f77d55267f820" prot="public" virt="non-virtual"><scope>Letter</scope><name>huffman</name></member>
      <member refid="class_letter_1a576189a6bc0a2dbecb998d73f7b9d2b5" prot="private" virt="non-virtual"><scope>Letter</scope><name>len_of_code_b_</name></member>
      <member refid="class_letter_1a06c63721ba0b1c40ac7591835f2e6e43" prot="public" virt="non-virtual"><scope>Letter</scope><name>length</name></member>
      <member refid="class_letter_1aa33f1a7d59948007cabb7cb3060fbbdd" prot="public" virt="non-virtual"><scope>Letter</scope><name>Letter</name></member>
      <member refid="class_letter_1aad5ec69b0312ac41d818337c5ff94e7e" prot="public" virt="non-virtual"><scope>Letter</scope><name>Letter</name></member>
      <member refid="class_letter_1ac390dd9bfbdd7a0965cd74b3eccee010" prot="public" virt="non-virtual"><scope>Letter</scope><name>Letter</name></member>
      <member refid="class_letter_1a5bd34c7d6753f3a950cb3a3358945c1a" prot="public" virt="non-virtual"><scope>Letter</scope><name>operator=</name></member>
      <member refid="class_letter_1acadabf182742d730bcc61f052b29aad8" prot="public" virt="non-virtual"><scope>Letter</scope><name>operator==</name></member>
      <member refid="class_letter_1a09e85e61f84fd8254a6aa930a72e8bdc" prot="private" virt="non-virtual"><scope>Letter</scope><name>original_</name></member>
      <member refid="class_letter_1a9ae0471d69dddf53a0a64219233d0c4a" prot="public" virt="non-virtual"><scope>Letter</scope><name>original</name></member>
      <member refid="class_letter_1af6158c9bc58d3f4b77ee627807b87133" prot="public" virt="non-virtual"><scope>Letter</scope><name>original</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

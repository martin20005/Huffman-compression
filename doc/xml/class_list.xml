<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_list" kind="class" language="C++" prot="public">
    <compoundname>List</compoundname>
    <includes refid="list_8h" local="no">list.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_list_1add37b87d7a0aa4fc03c73afb71d80525" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* List&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>adattömb </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="7" column="1" bodyfile="list.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_list_1a2c96b3000e57f165b6732fe740282a88" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int List&lt; T &gt;::len_of_code_b_</definition>
        <argsstring></argsstring>
        <name>len_of_code_b_</name>
        <briefdescription>
<para>adatmennyiség </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="8" column="1" bodyfile="list.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_list_1a84508677ac6d557cdc896db2d148ea91" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int List&lt; T &gt;::cap_</definition>
        <argsstring></argsstring>
        <name>cap_</name>
        <briefdescription>
<para>aktuális kapacitás </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="9" column="1" bodyfile="list.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_list_1aca7f27a4898ebda783a3416cac0f75a8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int List&lt; T &gt;::inc_size_</definition>
        <argsstring></argsstring>
        <name>inc_size_</name>
        <briefdescription>
<para>növelés mértéke (increase) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="10" column="1" bodyfile="list.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_list_1a48ef6c59b00fd6c6bbf1604583113e42" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>List&lt; T &gt;::List</definition>
        <argsstring>(int Cap=10, int Incr=10)</argsstring>
        <name>List</name>
        <param>
          <type>int</type>
          <declname>Cap</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>int</type>
          <declname>Incr</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="14" column="1" bodyfile="list.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a3f8cda0e5a9b4912759e782994e57735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>List&lt; T &gt;::List</definition>
        <argsstring>(const List &amp;l)</argsstring>
        <name>List</name>
        <param>
          <type>const <ref refid="class_list" kindref="compound">List</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="15" column="1" bodyfile="list.h" bodystart="15" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a2b58189090f6e5ce52939c9195e59e85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>List&lt; T &gt;::~List</definition>
        <argsstring>()</argsstring>
        <name>~List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="26" column="1" bodyfile="list.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a7a74fc01260437fac92355dc8d4e789c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int List&lt; T &gt;::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="28" column="1" bodyfile="list.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a1a6b5ceed2cb6d432c0a5d9114e79e70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void List&lt; T &gt;::add</definition>
        <argsstring>(T &amp;element)</argsstring>
        <name>add</name>
        <param>
          <type>T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="31" column="1" bodyfile="list.h" bodystart="31" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a54fa90e725d350cd7bd41270ebdfe775" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void List&lt; T &gt;::removeAt</definition>
        <argsstring>(int idx)</argsstring>
        <name>removeAt</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="42" column="1" bodyfile="list.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1ab20b18c4facb9c8ab89640c202057b80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void List&lt; T &gt;::remove</definition>
        <argsstring>(T &amp;element)</argsstring>
        <name>remove</name>
        <param>
          <type>T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="47" column="1" bodyfile="list.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1ab3489ae135b990deedac885f8bd3030b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int List&lt; T &gt;::findFirst</definition>
        <argsstring>(T &amp;element)</argsstring>
        <name>findFirst</name>
        <param>
          <type>T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="51" column="1" bodyfile="list.h" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a80967ab44431031fb55fd2fe635b7b5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; List&lt; T &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexelő operátor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="61" column="1" bodyfile="list.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_list_1a81a44c4aae9bb74b5166004cd28d9ac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_list" kindref="compound">List</ref> &amp;</type>
        <definition>List&amp; List&lt; T &gt;::operator+=</definition>
        <argsstring>(T element)</argsstring>
        <name>operator+=</name>
        <param>
          <type>T</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bővítés </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="list.h" line="67" column="1" bodyfile="list.h" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="list.h" line="6" column="1" bodyfile="list.h" bodystart="6" bodyend="71"/>
    <listofallmembers>
      <member refid="class_list_1a1a6b5ceed2cb6d432c0a5d9114e79e70" prot="public" virt="non-virtual"><scope>List</scope><name>add</name></member>
      <member refid="class_list_1a84508677ac6d557cdc896db2d148ea91" prot="private" virt="non-virtual"><scope>List</scope><name>cap_</name></member>
      <member refid="class_list_1a7a74fc01260437fac92355dc8d4e789c" prot="public" virt="non-virtual"><scope>List</scope><name>count</name></member>
      <member refid="class_list_1add37b87d7a0aa4fc03c73afb71d80525" prot="private" virt="non-virtual"><scope>List</scope><name>data_</name></member>
      <member refid="class_list_1ab3489ae135b990deedac885f8bd3030b" prot="public" virt="non-virtual"><scope>List</scope><name>findFirst</name></member>
      <member refid="class_list_1aca7f27a4898ebda783a3416cac0f75a8" prot="private" virt="non-virtual"><scope>List</scope><name>inc_size_</name></member>
      <member refid="class_list_1a2c96b3000e57f165b6732fe740282a88" prot="private" virt="non-virtual"><scope>List</scope><name>len_of_code_b_</name></member>
      <member refid="class_list_1a48ef6c59b00fd6c6bbf1604583113e42" prot="public" virt="non-virtual"><scope>List</scope><name>List</name></member>
      <member refid="class_list_1a3f8cda0e5a9b4912759e782994e57735" prot="public" virt="non-virtual"><scope>List</scope><name>List</name></member>
      <member refid="class_list_1a81a44c4aae9bb74b5166004cd28d9ac6" prot="public" virt="non-virtual"><scope>List</scope><name>operator+=</name></member>
      <member refid="class_list_1a80967ab44431031fb55fd2fe635b7b5e" prot="public" virt="non-virtual"><scope>List</scope><name>operator[]</name></member>
      <member refid="class_list_1ab20b18c4facb9c8ab89640c202057b80" prot="public" virt="non-virtual"><scope>List</scope><name>remove</name></member>
      <member refid="class_list_1a54fa90e725d350cd7bd41270ebdfe775" prot="public" virt="non-virtual"><scope>List</scope><name>removeAt</name></member>
      <member refid="class_list_1a2b58189090f6e5ce52939c9195e59e85" prot="public" virt="non-virtual"><scope>List</scope><name>~List</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="memtrace_8h" kind="file" language="C++">
    <compoundname>memtrace.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includedby refid="huffman_8cpp" local="yes">huffman.cpp</includedby>
    <includedby refid="gtest__lite_8h" local="yes">gtest_lite.h</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="memtrace_8cpp" local="yes">memtrace.cpp</includedby>
    <incdepgraph>
      <node id="105">
        <label>stdlib.h</label>
      </node>
      <node id="104">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="110">
        <label>memtrace.cpp</label>
        <link refid="memtrace_8cpp"/>
      </node>
      <node id="108">
        <label>gtest_lite.h</label>
        <link refid="gtest__lite_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>huffman.cpp</label>
        <link refid="huffman_8cpp"/>
      </node>
      <node id="106">
        <label>memtrace.h</label>
        <link refid="memtrace_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="memtrace_8h_1aa90f3e89fc3fe477370afb9f81975081" prot="public" static="no">
        <name>MEMTRACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="14" column="17" bodyfile="memtrace.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1ac089c2c8a58531c78e528190c18946b0" prot="public" static="no">
        <name>MEMTRACE_TO_MEMORY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="21" column="9" bodyfile="memtrace.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1ac7d83b17b55e7ca775a0127988f45c30" prot="public" static="no">
        <name>MEMTRACE_AUTO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="28" column="9" bodyfile="memtrace.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1abd343745021a44232eb2808e547001d5" prot="public" static="no">
        <name>MEMTRACE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="31" column="9" bodyfile="memtrace.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1af30a73f26c0085429afe8d13ccf255f5" prot="public" static="no">
        <name>ALLOW_FREE_NULL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="35" column="10" bodyfile="memtrace.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1aad4cd792b953244f20869915267ae837" prot="public" static="no">
        <name>START_NAMESPACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="70" column="11" bodyfile="memtrace.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" prot="public" static="no">
        <name>END_NAMESPACE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="71" column="10" bodyfile="memtrace.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" prot="public" static="no">
        <name>TRACEC</name>
        <param><defname>func</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="72" column="10" bodyfile="memtrace.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" prot="public" static="no">
        <name>THROW_BADALLOC</name>
        <initializer>throw (std::bad_alloc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="90" column="10" bodyfile="memtrace.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" prot="public" static="no">
        <name>THROW_NOTHING</name>
        <initializer>throw ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="91" column="10" bodyfile="memtrace.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1a2eb0b03d1a9de9615a291b1205969069" prot="public" static="no">
        <name>malloc</name>
        <param><defname>size</defname></param>
        <initializer><ref refid="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" kindref="member">TRACEC</ref>(<ref refid="memtrace_8h_1a878d95f35f94bc40ca0f41d5630c10a0" kindref="member">traced_malloc</ref>)(size,#size,__LINE__,__FILE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="166" column="12" bodyfile="memtrace.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1ab98a612296b79e3e44d41727977b07a5" prot="public" static="no">
        <name>calloc</name>
        <param><defname>count</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" kindref="member">TRACEC</ref>(<ref refid="memtrace_8h_1a8d30ad82fb5ab2f070bb8552d5f71575" kindref="member">traced_calloc</ref>)(count, size, #count&quot;,&quot;#size,__LINE__,__FILE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="170" column="12" bodyfile="memtrace.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1a9d4b5df3530d1bc733070a4669ba6ebc" prot="public" static="no">
        <name>free</name>
        <param><defname>p</defname></param>
        <initializer><ref refid="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" kindref="member">TRACEC</ref>(<ref refid="memtrace_8h_1a324b3ee7c799b67c4bae9dcdfa144dd3" kindref="member">traced_free</ref>)(p, #p,__LINE__,__FILE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="174" column="12" bodyfile="memtrace.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memtrace_8h_1a2d566601d9a416502dd2fd2816678fed" prot="public" static="no">
        <name>realloc</name>
        <param><defname>old</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" kindref="member">TRACEC</ref>(<ref refid="memtrace_8h_1ad9b9f054074d56c2952702d341aba982" kindref="member">traced_realloc</ref>)(old,size,#size,__LINE__,__FILE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="178" column="12" bodyfile="memtrace.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="memtrace_8h_1ab8ef9a94a4ba8246012e9bfeb5b0c589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref> int</type>
        <definition>START_NAMESPACE int allocated_blocks</definition>
        <argsstring>()</argsstring>
        <name>allocated_blocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="100" column="1" bodyfile="memtrace.cpp" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1ab531f5bcfca2f50b8c2a43f7bb96fc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref> <ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref> int</type>
        <definition>END_NAMESPACE START_NAMESPACE int mem_check</definition>
        <argsstring>(void)</argsstring>
        <name>mem_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="105" column="1" bodyfile="memtrace.cpp" bodystart="213" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1a878d95f35f94bc40ca0f41d5630c10a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* traced_malloc</definition>
        <argsstring>(size_t size, const char *size_txt, int line, const char *file)</argsstring>
        <name>traced_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>size_txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="167" column="1" bodyfile="memtrace.cpp" bodystart="330" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1a8d30ad82fb5ab2f070bb8552d5f71575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* traced_calloc</definition>
        <argsstring>(size_t count, size_t size, const char *size_txt, int line, const char *file)</argsstring>
        <name>traced_calloc</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>size_txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="171" column="1" bodyfile="memtrace.cpp" bodystart="344" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1a324b3ee7c799b67c4bae9dcdfa144dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void traced_free</definition>
        <argsstring>(void *p, const char *size_txt, int line, const char *file)</argsstring>
        <name>traced_free</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>size_txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="175" column="1" bodyfile="memtrace.cpp" bodystart="359" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1ad9b9f054074d56c2952702d341aba982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* traced_realloc</definition>
        <argsstring>(void *old, size_t size, const char *size_txt, int line, const char *file)</argsstring>
        <name>traced_realloc</name>
        <param>
          <type>void *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>size_txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="179" column="1" bodyfile="memtrace.cpp" bodystart="381" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="memtrace_8h_1a031b528c007e2e8ba5d814be13d3860c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mem_dump</definition>
        <argsstring>(void const *mem, size_t size, FILE *fp)</argsstring>
        <name>mem_dump</name>
        <param>
          <type>void const *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="memtrace.h" line="181" column="1" bodyfile="memtrace.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Memoriaszivargas-detektor</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Keszitette:<sp/>Peregi<sp/>Tamas,<sp/>BME<sp/>IIT,<sp/>2011</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>petamas@iit.bme.hu</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Kanari:<sp/><sp/><sp/><sp/><sp/>Szeberenyi<sp/>Imre,<sp/>2013.,</highlight></codeline>
<codeline lineno="6"><highlight class="comment">VS<sp/>2012:<sp/><sp/><sp/><sp/>Szeberényi<sp/>Imre,<sp/>2015.,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">mem_dump:<sp/><sp/><sp/>2016.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">inclue-ok:<sp/><sp/>2017.,<sp/>2018.<sp/>2019.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">singleton:<sp/><sp/>2019.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEMTRACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="memtrace_8h_1aa90f3e89fc3fe477370afb9f81975081" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MEMTRACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*ha<sp/>definiálva<sp/>van,<sp/>akkor<sp/>a<sp/>hibakat<sp/>ebbe<sp/>a<sp/>fajlba<sp/>írja,<sp/>egyébkent<sp/>stderr-re*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>MEMTRACE_ERRFILE<sp/>MEMTRACE.ERR*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>futas<sp/>kozben<sp/>lancolt<sp/>listat<sp/>epit.<sp/>Javasolt<sp/>a<sp/>hasznalata*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="memtrace_8h_1ac089c2c8a58531c78e528190c18946b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>futas<sp/>kozben<sp/>fajlba<sp/>irja<sp/>a<sp/>foglalasokat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*ekkor<sp/>nincs<sp/>ellenorzes,<sp/>csak<sp/>naplozas*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>MEMTRACE_TO_FILE*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>a<sp/>megallaskor<sp/>automatikus<sp/>riport<sp/>keszul<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="memtrace_8h_1ac7d83b17b55e7ca775a0127988f45c30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE_AUTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>malloc()/calloc()/realloc()/free()<sp/>kovetve<sp/>lesz*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="memtrace_8h_1abd343745021a44232eb2808e547001d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMTRACE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>free(NULL)<sp/>nem<sp/>okoz<sp/>hibat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="memtrace_8h_1af30a73f26c0085429afe8d13ccf255f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>ALLOW_FREE_NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>new/delete/new[]/delete[]<sp/>kovetve<sp/>lesz*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>defined(MEMTRACE_TO_MEMORY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ha<sp/>definialva<sp/>van,<sp/>akkor<sp/>atexit<sp/>helyett<sp/>objektumot<sp/>hasznal*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ajanlott<sp/>bekapcsolni*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>USE_ATEXIT_OBJECT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INNEN<sp/>NE<sp/>MODOSITSD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NO_MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MEMTRACE_TO_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NO_MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MEMTRACE_TO_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEMTRACE_AUTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>USE_ATEXIT_OBJECT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>START_NAMESPACE<sp/>namespace<sp/>memtrace<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>END_NAMESPACE<sp/>}<sp/></highlight><highlight class="comment">/*namespace*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>TRACEC(func)<sp/>memtrace::func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;new&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>START_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>END_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="memtrace_8h_1a429dce7f3bb9a1335f0c7febd62938df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>TRACEC(func)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THROW<sp/>deklaráció<sp/>változatai</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>VS<sp/>rosszul<sp/>kezeli<sp/>az<sp/>__cplusplus<sp/>makrot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>_MSC_VER<sp/>&lt;<sp/>1900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>nem<sp/>biztos,<sp/>hogy<sp/>jó<sp/>így<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_BADALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_NOTHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C++11<sp/>vagy<sp/>újabb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_BADALLOC<sp/>noexcept(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_NOTHING<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>__cplusplus<sp/>&lt;<sp/>201103L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C++2003<sp/>vagy<sp/>régebbi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_BADALLOC<sp/>throw<sp/>(std::bad_alloc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_NOTHING<sp/>throw<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C++11<sp/>vagy<sp/>újabb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_BADALLOC<sp/>noexcept(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>THROW_NOTHING<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memtrace_8h_1ab8ef9a94a4ba8246012e9bfeb5b0c589" kindref="member">allocated_blocks</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MEMTRACE_TO_MEMORY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memtrace_8h_1ab531f5bcfca2f50b8c2a43f7bb96fc0e" kindref="member">mem_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MEMTRACE_TO_MEMORY)<sp/>&amp;&amp;<sp/>defined(USE_ATEXIT_OBJECT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">atexit_class<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atexit_class()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CPORTA)<sp/>&amp;&amp;<sp/>!defined(CPORTA_NOSETBUF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setbuf(stdout,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setbuf(stderr,<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>atexit_class&amp;<sp/>get_atexit_obj()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>atexit_class<sp/>instance;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>singleton<sp/>példány</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="memtrace_8h_1ab531f5bcfca2f50b8c2a43f7bb96fc0e" kindref="member">mem_check</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~atexit_class()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>atexit_class&amp;<sp/>atexit_obj<sp/>=<sp/>atexit_class::get_atexit_obj();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">/*MEMTRACE_TO_MEMORY<sp/>&amp;&amp;<sp/>USE_ATEXIT_OBJECT*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*Innentol<sp/>csak<sp/>a<sp/>&quot;normal&quot;<sp/>include<sp/>eseten<sp/>kell,<sp/>kulonben<sp/>osszezavarja<sp/>a<sp/>mukodest*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FROM_MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ide<sp/>gyűjtjük<sp/>a<sp/>nemtrace-vel<sp/>összeakadó<sp/>headereket,<sp/>hogy<sp/>előbb<sp/>legyenek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>VS<sp/>2013<sp/>headerjében<sp/>van<sp/>deleted<sp/>definició</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*new_handler)();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="memtrace_8h_1a2eb0b03d1a9de9615a291b1205969069" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>malloc(size)<sp/>TRACEC(traced_malloc)(size,#size,__LINE__,__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="memtrace_8h_1a878d95f35f94bc40ca0f41d5630c10a0" kindref="member">traced_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_txt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="memtrace_8h_1ab98a612296b79e3e44d41727977b07a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>calloc(count,size)<sp/>TRACEC(traced_calloc)(count,<sp/>size,<sp/>#count&quot;,&quot;#size,__LINE__,__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="memtrace_8h_1a8d30ad82fb5ab2f070bb8552d5f71575" kindref="member">traced_calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_txt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="memtrace_8h_1a9d4b5df3530d1bc733070a4669ba6ebc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>free(p)<sp/>TRACEC(traced_free)(p,<sp/>#p,__LINE__,__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="memtrace_8h_1a324b3ee7c799b67c4bae9dcdfa144dd3" kindref="member">traced_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_txt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="memtrace_8h_1a2d566601d9a416502dd2fd2816678fed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>realloc(old,size)<sp/>TRACEC(traced_realloc)(old,size,#size,__LINE__,__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="memtrace_8h_1ad9b9f054074d56c2952702d341aba982" kindref="member">traced_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>old,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*size_txt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="memtrace_8h_1a031b528c007e2e8ba5d814be13d3860c" kindref="member">mem_dump</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">/*MEMTRACE_C*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MEMTRACE_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="memtrace_8h_1aad4cd792b953244f20869915267ae837" kindref="member">START_NAMESPACE</ref></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>set_new_handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>set_new_handler(f)<sp/>TRACEC(_set_new_handler)(f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_set_new_handler(std::new_handler<sp/>h);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_delete_call(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="memtrace_8h_1a28886d59fbdc2dccd82cc4887e967d0d" kindref="member">END_NAMESPACE</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file)<sp/><ref refid="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" kindref="member">THROW_BADALLOC</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file)<sp/><ref refid="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" kindref="member">THROW_BADALLOC</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/><ref refid="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" kindref="member">THROW_BADALLOC</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/><ref refid="memtrace_8h_1ad51e1559346aea8b3493be2ecefaa09d" kindref="member">THROW_BADALLOC</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>p)<sp/><sp/><ref refid="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" kindref="member">THROW_NOTHING</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>p)<sp/><ref refid="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" kindref="member">THROW_NOTHING</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Visual<sp/>C++<sp/>2012<sp/>miatt<sp/>kell,<sp/>mert<sp/>háklis,<sp/>hogy<sp/>nincs<sp/>megfelelő<sp/>delete,<sp/>bár<sp/>senki<sp/>sem<sp/>használja<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" kindref="member">THROW_NOTHING</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="memtrace_8h_1ab62d0ac94900b7586e89da2d6cedf008" kindref="member">THROW_NOTHING</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>new(__LINE__,<sp/>__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>delete<sp/>memtrace::set_delete_call(__LINE__,<sp/>__FILE__),delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CPORTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>system(...)<sp/><sp/>//<sp/>system(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*MEMTRACE_CPP*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*FROM_MEMTRACE_CPP*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*MEMCHECK*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*MEMTRACE_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="memtrace.h"/>
  </compounddef>
</doxygen>
